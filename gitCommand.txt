git add fileName																添加修改至库
git commit	-m '' 																提交修改至库
git status																		查看状态
git log																			查看版本信息
git reset --hard HEAD^															回到某个版本 （HEAD^表示版本号）
git reflog																		查看命令记录
git diff HEAD -- fileName														查看某一版本的修改内容
git checkout --fileName															恢复修改（用版本库中的文件替换当前文件）
git reset HEAD	fileName														撤销缓存
git rm fileName + git commit													删除文件
ssh-keygen -t rsa -C "youremail@example.com"									创建本地SSH
git remote add origin https://github.com/jollyelf/GitTest.git					将本地库与远程库建立连接
git push -u origin master/git push origin master								将本地库内容提交远程库（第一次提交时加-u参数）
git clone git@github.com:jollyelf/gitSkill.git									从远程服务器中克隆库
git checkout -b branchName														创建一个分支并切换到分支
git branch branchName															创建分支
git checkout branchName															切换到分支（切换到某一分支或回到主分支）
git merge branchName															合并分支（需要在主分支下面才能进行）
git branch -d/D branchName														删除分支（-D为强行删除分支）
git stash																		储存当前现场（当正在开展工作时，开展临时的工作时使用）
git stash pop																	完后其他工作后恢复当前工作（首先需要进到开展工作的分支中）
git stash list																	查看stash内容
git stash apply stash@{0}/git stash drop										恢复到指定的工作现场
git remote -v																	查看远程库名称(详细信息)
git pull																		从远程服务器获取某文件的修改至本地
git branch --set-upstream-to <branch-name> origin/<branch-name>					建立本地分支和远程分支之间的连接
git rebase																		将本地的未push的分叉提交历史整理成直线
git tag tagname 																给定分支打标签（首先需进入到给定分支）
git show tagname																查看标签详细信息
git tag -a <tagname> -m "blablabla..."											给标签指定标签信息
git tag -d tagname																删除标签
git push origin tagname（--tags）												标签推送到远程(推送所有未推送的标签)
git push origin :refs/tags/<tagname>											远程删除标签
git remote rm origin															删除远程库
****.gitignore																	该文件用于指示哪些文件被git忽略（该文件本身需要提交）
git config --global alias.alias command											配置别名

 










								

